"""
Copyright (C) 2020-2024 LIG Université Grenoble Alpes


This file is part of Matos.

Matos is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

FacManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with FacManager. If not, see <https://www.gnu.org/licenses/>

@author Germain Lemasson
@author Clément Lesaulnier
@author Robin Courault
"""
# Generated by Django 4.1.7 on 2023-04-11 08:44

from django.db import migrations, models
import django.db.models.deletion
from django.contrib.auth import get_user_model
from django.conf import settings

def initial_is_pro(apps, schema):
    if(settings.ISPRO_SCHEMA):
        User = get_user_model()

        for u in User.objects.all():
            u.is_pro = u.email.endswith(tuple(settings.ISPRO_SCHEMA))
            u.save()

def reversal(*args):
    """Reversal is NOOP since is_pro is simply dropped during reverse"""

class Migration(migrations.Migration):

    replaces = [('core', '0010_user_is_pro_alter_genericmaterial_entity_and_more'), ('core', '0011_entity_is_pro')]

    dependencies = [
        ('core', '0009_auto_20211109_1323'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='is_pro',
            field=models.BooleanField(default=False),
        ),
        migrations.RunPython(initial_is_pro, reversal),
        migrations.AlterField(
            model_name='genericmaterial',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='core.entity'),
        ),
        migrations.AlterField(
            model_name='genericmaterial',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='core.tag'),
        ),
        migrations.AlterField(
            model_name='loan',
            name='status',
            field=models.PositiveSmallIntegerField(choices=[(2, 'En attente'), (3, 'Accepté'), (4, 'Refusé'), (1, 'Annulé')]),
        ),
        migrations.AlterField(
            model_name='specificmaterial',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='core.entity'),
        ),
        migrations.AlterField(
            model_name='specificmaterial',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='core.tag'),
        ),
        migrations.AddField(
            model_name='entity',
            name='is_pro',
            field=models.BooleanField(default=False),
        ),
    ]
